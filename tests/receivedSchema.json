{
  "info": {
    "description": "Foo",
    "title": "Bar",
    "version": "0.0.1"
  },
  "openapi": "3.1.0",
  "tags": [
    {
      "name": "auth"
    },
    {
      "name": "some"
    },
    {
      "name": "tests"
    }
  ],
  "paths": {
    "/api/login-custom-function": {
      "post": {
        "summary": "Login",
        "tags": [
          "auth"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReturnedData"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          },
          "default": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "examples": [
                  {
                    "login": "",
                    "pass": ""
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/upload": {
      "put": {
        "summary": "",
        "tags": [
          "some"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReturnedData"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          },
          "default": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "someField": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/update/{id}": {
      "patch": {
        "summary": "",
        "tags": [
          "some"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReturnedData"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          },
          "default": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/some.update"
              }
            }
          }
        }
      }
    },
    "/api/find": {
      "get": {
        "summary": "Some find summary",
        "tags": [
          "some"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReturnedData"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          },
          "default": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/go": {
      "post": {
        "summary": "",
        "tags": [
          "some"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReturnedData"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          },
          "default": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/some.go"
              }
            }
          }
        }
      }
    },
    "/api/some-login": {
      "post": {
        "summary": "",
        "tags": [
          "some"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReturnedData"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          },
          "default": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/some.login"
              }
            }
          }
        }
      }
    },
    "/api/tests-simple": {
      "post": {
        "summary": "",
        "tags": [
          "tests"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReturnedData"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          },
          "default": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tests.simple"
              }
            }
          }
        }
      }
    },
    "/api/tests-strings": {
      "post": {
        "summary": "",
        "tags": [
          "tests"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReturnedData"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          },
          "default": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tests.strings"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DbMixinList": {
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "totalCount": {
            "type": "number"
          }
        }
      },
      "DbMixinFindList": {
        "type": "array",
        "items": {
          "type": "object"
        }
      },
      "Item": {
        "type": "object"
      },
      "Error": {
        "type": "object",
        "properties": {
          "name": {
            "examples": [
              "InternalServerError"
            ],
            "type": "string",
            "description": "The name of the error"
          },
          "message": {
            "examples": [
              "Example"
            ],
            "type": "string",
            "description": "an helping message"
          },
          "code": {
            "type": "number",
            "description": "the status code of the error (can be different of the HTTP status code)"
          },
          "type": {
            "type": "string",
            "description": "additional information for the error"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "message",
          "code"
        ]
      },
      "unknown-action": {
        "type": "object",
        "properties": {}
      },
      "some.upload": {
        "type": "object",
        "properties": {}
      },
      "some.update": {
        "type": "object",
        "properties": {}
      },
      "some.go": {
        "type": "object",
        "properties": {}
      },
      "some.login": {
        "type": "object",
        "properties": {}
      },
      "tests.simple": {
        "type": "object",
        "properties": {}
      },
      "tests.strings": {
        "type": "object",
        "properties": {}
      }
    },
    "securitySchemes": {},
    "responses": {
      "ServerError": {
        "description": "Server errors: 500, 501, 400, 404 and etc...",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error"
                },
                {
                  "examples": [
                    {
                      "name": "InternalServerError",
                      "message": "Internal Server Error",
                      "code": 500
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "UnauthorizedError": {
        "description": "Need auth",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error"
                },
                {
                  "type": "object",
                  "examples": [
                    {
                      "name": "UnAuthorizedError",
                      "message": "Unauthorized",
                      "code": 401
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "ValidationError": {
        "description": "Fields invalid",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error"
                },
                {
                  "type": "object",
                  "examples": [
                    {
                      "name": "MoleculerClientError",
                      "message": "Error message",
                      "code": 422,
                      "data": [
                        {
                          "name": "fieldName",
                          "message": "Field invalid"
                        },
                        {
                          "name": "arrayField[0].fieldName",
                          "message": "Whats wrong"
                        },
                        {
                          "name": "object.fieldName",
                          "message": "Whats wrong"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "ReturnedData": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DbMixinList"
                },
                {
                  "$ref": "#/components/schemas/DbMixinFindList"
                },
                {
                  "$ref": "#/components/schemas/Item"
                }
              ]
            }
          }
        }
      },
      "FileNotExist": {
        "description": "File not exist",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "examples": [
                {
                  "name": "MoleculerClientError",
                  "message": "File missing in the request",
                  "code": 400
                }
              ]
            }
          }
        }
      },
      "FileTooBig": {
        "description": "File too big",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "examples": [
                {
                  "name": "PayloadTooLarge",
                  "message": "Payload too large",
                  "code": 413,
                  "type": "PAYLOAD_TOO_LARGE",
                  "data": {
                    "fieldname": "file",
                    "filename": "4b2005c0b8.png",
                    "encoding": "7bit",
                    "mimetype": "image/png"
                  }
                }
              ]
            }
          }
        }
      }
    }
  }
}